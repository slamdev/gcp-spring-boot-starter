plugins {
    id 'idea'
    id 'java-library'
    id 'maven-publish'
    id 'io.spring.dependency-management' version '1.0.3.RELEASE'
    id 'com.jfrog.bintray' version '1.7.3'
}

group 'com.github.slamdev'

repositories {
    jcenter()
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation' << '-Werror'
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.boot:spring-boot-dependencies:1.5.6.RELEASE'
    }
    dependencies {
        dependency 'com.google.cloud:google-cloud-core:1.3.1'
        dependency 'com.google.cloud:google-cloud-storage:1.3.1'
        dependency 'com.google.cloud:google-cloud-spanner:0.21.1-beta'
    }
}

dependencies {
    api 'com.google.cloud:google-cloud-core'
    implementation 'org.springframework.boot:spring-boot-starter'
    compileOnly 'com.google.cloud:google-cloud-storage'
    compileOnly 'com.google.cloud:google-cloud-spanner'
    compileOnly 'org.springframework.boot:spring-boot-configuration-processor'
    compileOnly 'org.projectlombok:lombok'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

bintray {
    user = 'slamdev'
    key = "${-> getBintrayPublishKey()}"
    override = true
    publications = ['mavenJava']
    pkg {
        repo = 'maven'
        name = project.name
        desc = 'Spring Boot starter for Google Cloud Platform services'
        licenses = ['MIT']
        websiteUrl = 'https://github.com/slamdev/gcp-spring-boot-starter'
        issueTrackerUrl = 'https://github.com/slamdev/gcp-spring-boot-starter/issues'
        vcsUrl = 'https://github.com/slamdev/gcp-spring-boot-starter.git'
        labels = ['spring', 'spring-boot', 'google', 'google-cloud']
    }
}

def getBintrayPublishKey() {
    if (project.hasProperty('bintray.publish.key')) {
        return project.properties['bintray.publish.key']
    }
    if (System.getenv().hasProperty('BINTRAY_PUBLISH_KEY')) {
        return System.getenv('BINTRAY_PUBLISH_KEY')
    }
    throw new InvalidUserDataException('Either `bintray.publish.key` project property or ' +
            '`BINTRAY_PUBLISH_KEY` environment variable should be specified')
}
